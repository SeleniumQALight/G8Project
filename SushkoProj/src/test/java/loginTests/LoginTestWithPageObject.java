package loginTests;

import baseTest.BaseTest;
import org.junit.Assert;
import org.junit.Test;

import static libs.TestData.*;

public class LoginTestWithPageObject extends BaseTest {
    @Test
    public void validLogin() {
        pageProvider.loginPage().openLoginPage();
        pageProvider.loginPage().enterTextIntoInputLogin(VALID_LOGIN_UI);
        pageProvider.loginPage().enterTextIntoInputPassword(VALID_PASSWORD_UI);
        pageProvider.loginPage().clickOnButtonSingIn();

        pageProvider.homePage().getHeader().checkAllElementsInHeaderAreVisible();
        pageProvider.loginPage().checkAllElementsFromLoginFormAreInvisible();

//I did it first via assert, then replaced with new created methods, but they do more checks than specified in the task.
// it looks better through the methods, but I commented the first option just in case
//
//        Assert.assertTrue("Button SignOut is not visible",
//                pageProvider.homePage().getHeader().isButtonSignOutVisible());
//        Assert.assertTrue("Button Create Post is not visible",
//                pageProvider.homePage().getHeader().isButtonCreatePostIsVisible());
//        Assert.assertTrue("Button My Profile is not visible",
//                pageProvider.homePage().getHeader().isButtonMyProfileIsVisible());
//        Assert.assertTrue("User profile name is not visible",
//                pageProvider.homePage().getHeader().isSpanUserProfileNameIsVisible());

//        Assert.assertFalse("Field for login is visible",
//                pageProvider.loginPage().isInputLoginIsVisible());
//        Assert.assertFalse("Field for password is visible",
//                pageProvider.loginPage().isInputPasswordIsVisible());

    }

    @Test
    public void invalidLogin() {
        pageProvider.loginPage().openLoginPage();
        pageProvider.loginPage().enterTextIntoInputLogin("qaauto_1");
        pageProvider.loginPage().enterTextIntoInputPassword("123456qwerty");
        pageProvider.loginPage().clickOnButtonSingIn();

        Assert.assertTrue("Button SignIn is not visible",
                pageProvider.loginPage().isButtonSignInIsVisible());
        Assert.assertFalse("Button SignOut is visible",
                pageProvider.homePage().getHeader().isButtonSignOutVisible());
        Assert.assertTrue("Validation message is not displayed",
                pageProvider.loginPage().isValidationMessageIsDisplayed());
    }

    @Test
    public void loginAndOpenLoginPageInNewTab(){
        pageProvider.loginPage()
                .openLoginPageAndFillLoginFormWithValidCreds()
                .getHeader()
                .isButtonSignOutVisible()
        ;

        pageProvider.loginPage()
                .openLoginPageInNewTabWithJS(1)
        ;

        pageProvider.homePage().getHeader().isButtonSignOutVisible();
        pageProvider.loginPage().switchToMainTab();

        pageProvider.homePage().getHeader().isButtonSignOutVisible();

        pageProvider.loginPage().closeTabAndSwitchToMainTab(1);
        pageProvider.homePage().getHeader().isButtonSignOutVisible();
    }

    @Test
    public void inputLoginDataAndRefreshPage(){
        pageProvider.loginPage().openLoginPage();
        pageProvider.loginPage().enterTextIntoInputLogin(VALID_LOGIN_UI);
        pageProvider.loginPage().enterTextIntoInputPassword(VALID_PASSWORD_UI);

        pageProvider.loginPage().refreshPage();
        pageProvider.loginPage().clickOnButtonSingIn();

        Assert.assertFalse("Button SignOut is visible",
                pageProvider.homePage().getHeader().isButtonSignOutVisible());
    }
}


//–î–æ–¥–∞—Ç–∫–æ–≤–∞ –¥–æ–º–∞—à–∫–∞ (–Ω–µ –æ–±–æ–≤ º—è–∑–∫–æ–≤–æ –¥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è)
//1. –¢–µ—Å—Ç –Ω–∞ –≤–∞–ª—ñ–¥–Ω–∏–π –ª–æ–≥—ñ–Ω –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–æ–∫ (–¢–ê–ë —ñ –ï–Ω—Ç–µ—Ä) –≤–∏–∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏ Actions –∫–ª–∞—Å
//    Steps
//    1. Open login page
//    2. Press Tab key
//    3. Press Tab key
//    4. Enter login into input Login (–≤–≤–µ–¥–µ–Ω–Ω—è –±–µ–∑ –µ–ª–µ–º–µ–Ω—Ç–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –∫–ª–∞—Å—Å Actions)
//    5. Press Tab key
//    6. Enter password into input Password
//    7. Press Enter key
//    8. Check that button SignOut is visible
//
//2. –¢–µ—Å—Ç –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –µ—Ä—Ä–æ—Ä –º–µ—Å–µ–¥–∂—ñ–≤ –ø—Ä–∏ —Ä–µ–≥—ñ—Å—Ç—Ä–∞—Ü—ñ—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–æ–∫ (–¢–ê–ë —ñ –ï–Ω—Ç–µ—Ä)
//    Steps
//     1. Open login page
//     2. Tabom –¥–æ–∫–ª—ñ–∫–∞—Ç–∏ –¥–æ –ø–æ–ª—è User Name –≤ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ–π —Ñ–æ—Ä–º—ñ
//     3. –í–≤–µ—Å—Ç–∏ –Ω–µ –≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø–æ–ª–µ User Name
//     4. Tabom –¥–æ–∫–ª—ñ–∫–∞—Ç–∏ –¥–æ –ø–æ–ª—è Email –≤ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ–π —Ñ–æ—Ä–º—ñ
//     5. –í–≤–µ—Å—Ç–∏ –Ω–µ –≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø–æ–ª–µ Email
//     6. Tabom –¥–æ–∫–ª—ñ–∫–∞—Ç–∏ –¥–æ –ø–æ–ª—è Password –≤ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ–π–Ω—ñ–π —Ñ–æ—Ä–º—ñ
//     7. –í–≤–µ—Å—Ç–∏ –Ω–µ –≤–∞–ª—ñ–¥–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤ –ø–æ–ª–µ Password
//     8. –ù–∞—Ç–∏—Å–Ω—É—Ç–∏ –∫–Ω–æ–ø–∫—É Enter
//     9. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —â–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏–ª–∏—Å—è —Ç—Ä–∏ –µ—Ä—Ä–æ—Ä –º–µ—Å–µ–¥–∂–∞
//
// 3. –¢–µ—Å—Ç –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ä–∞–∑–ª–æ–≥—ñ–Ω—É–≤–∞–Ω–Ω—è –≤ –¥–≤–æ—Ö —Ç–∞–±–∞—Ö
//    Steps
//     1. Open login page
//     2. Login with valid credentials
//     3. Check that button SignOut is visible
//     4. Open new tab in browser using JavaScript
//     5. Switch to new tab
//     6. Open login page
//     7. Check that button SignOut is visible
//     8. Switch to main tab
//     9. Click on button SignOut
//     10. Check that button SignOut is not visible
//     11. Switch to new tab
//     12. Refresh page
//     12. Check that button SignOut is not visible
//
//
//NOTE!
//–°–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–∞–π—Ç–∏ –º–µ—Ç–æ–¥–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –ø–æ —Ä–æ–±–æ—Ç—ñ –∑ –≤–∫–ª–∞–¥–∫–∞–º–∏ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ, –ø–æ —Ä–æ–±–æ—Ç—ñ –∑ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–æ—é (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ Actions –∫–ª–∞—Å).
//–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø–æ—à—É–∫ –ø–æ —Å–∞–π—Ç—É stackoverflow.com, selenium.dev, google.com. –ê —Ç–∞–∫–æ–∂ –∑–≤–∏—á–∞–π–Ω–æ Copilot üôÇ
//–Ø–∫—â–æ –∂ —Ç—Ä–µ–±–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥–∏ —á–∏ –∑—Ä–æ–∑—É–º—ñ—Ç–∏ —è–∫ —ó—Ö –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤ —Ç–µ—Å—Ç–∞—Ö, —Ç–∞ —ñ –¥–µ—è–∫—ñ –ø—Ä–∏–∫–ª–∞–¥–∏ —Ç–µ—Å—Ç—ñ–≤ - —Ü–µ –º–æ–∂–Ω–∞ –ø—ñ–¥–≥–ª—è–Ω—É—Ç–∏ –æ—Å—å –≤ —Ü—å–æ–º—É –∫–æ–º–º—ñ—Ç—ñ
//https://github.com/SeleniumQALight/G8Project/pull/224/commits/cd9643656c8f95dfff98750cd0fea94716a14b5a
